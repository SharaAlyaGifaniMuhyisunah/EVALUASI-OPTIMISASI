using JuMP
using GLPK
using Ipopt

# Matriks Q
Q = [10 8 -3; 8 15 5; -3 5 9]

# Vektor p
p = [-18.0, -10.0, 8.0]

# Konstanta s
s = 2.0

# Membuat model optimisasi
model = Model(Ipopt.Optimizer)

# Variabel keputusan
@variable(model, -1 <= y[1:3] <= 1)

# Fungsi tujuan
@objective(model, Min, 0.5 * sum(Q[i, j] * y[i] * y[j] for i in 1:3, j in 1:3) + p' * y + s)

# Menyelesaikan masalah
optimize!(model)

# Mendapatkan hasil
optimal_value = objective_value(model)
optimal_y = value.(y)

# Menampilkan hasil
println("Nilai optimal dari fungsi tujuan: ", optimal_value)
println("Solusi optimal y: ", optimal_y)
